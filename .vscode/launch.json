{
  "version": "0.2.0",
  "configurations": [
    {
      "name": "ðŸš€ Molecular Analysis Dev Server (Full Pipeline)",
      "type": "node",
      "request": "launch",
      "program": "${workspaceFolder}/backend/api/server.js",
      "env": {
        "NODE_ENV": "development",
        "DEBUG": "*"
      },
      "console": "integratedTerminal",
      "restart": true,
      "runtimeArgs": ["--inspect"],
      "skipFiles": ["<node_internals>/**"],
      "preLaunchTask": "dev-pipeline-setup",
      "postDebugTask": "dev-pipeline-cleanup"
    },
    {
      "name": "ðŸ”§ Debug Mode (Maximum Visibility)",
      "type": "node", 
      "request": "launch",
      "program": "${workspaceFolder}/backend/api/server.js",
      "env": {
        "NODE_ENV": "development",
        "DEBUG": "*",
        "PY_DEBUG": "1"
      },
      "console": "integratedTerminal",
      "restart": true,
      "runtimeArgs": ["--inspect", "--inspect-brk"],
      "skipFiles": ["<node_internals>/**"],
      "stopOnEntry": false
    },
    {
      "name": "ðŸ§ª Test Runner (Full Suite)",
      "type": "node",
      "request": "launch", 
      "program": "${workspaceFolder}/node_modules/.bin/jest",
      "args": ["--verbose", "--runInBand"],
      "env": {
        "NODE_ENV": "test"
      },
      "console": "integratedTerminal",
      "skipFiles": ["<node_internals>/**"]
    }
  ],
  "compounds": [
    {
      "name": "ðŸŒŸ Complete Development Environment",
      "configurations": [
        "ðŸš€ Molecular Analysis Dev Server (Full Pipeline)"
      ],
      "presentation": {
        "hidden": false,
        "group": "development",
        "order": 1
      }
    }
  ],
  "_pipeline_documentation": {
    "description": "Molecular Analysis App Development Pipeline",
    "version": "1.0.0",
    "infrastructure": {
      "livereload": {
        "port": 35730,
        "middleware": "connect-livereload",
        "watching": ["backend/**/*", "frontend/**/*"],
        "extensions": [".js", ".html", ".css"]
      },
      "servers": {
        "http": "http://localhost:8080",
        "https": "https://localhost:3001", 
        "mobile_http": "http://172.20.10.4:8080",
        "mobile_https": "https://172.20.10.4:3001"
      },
      "dependencies": {
        "core": ["openai", "express", "cors", "multer", "pg", "stripe", "sharp", "fs-extra", "zod"],
        "dev": ["nodemon", "livereload", "connect-livereload", "jest"]
      },
      "database": {
        "type": "PostgreSQL",
        "name": "mol_users",
        "host": "localhost",
        "port": 5432,
        "required_for": "user_persistence",
        "setup_command": "createdb mol_users"
      }
    },
    "ui_architecture": {
      "design_philosophy": "stupid_simple",
      "rules": "ui.mdc compliance",
      "theme": "dark (#000000 backgrounds)",
      "icons_only": "no text labels",
      "no_decorative_elements": "borders, outlines, box-shadows removed"
    },
    "development_workflow": {
      "file_watching": "nodemon restarts server on backend changes",
      "browser_refresh": "livereload refreshes browser on frontend changes", 
      "auto_debug": "VS Code auto-attach on --inspect",
      "payment_bypass": "developer mode auto-enabled on localhost",
      "error_reporting": "structured console logs with ðŸš¨ prefix"
    },
    "molecular_analysis": {
      "ai_provider": "OpenAI Vision API",
      "visualization": "3DMol.js with sphere representation",
      "scale": "van der Waals radii at 0.8",
      "chemistry_formats": ["SMILES", "SDF"],
      "analysis_types": ["text_input", "camera_capture", "image_upload"]
    },
    "startup_sequence": [
      "1. Load dependencies (openai, express, cors, etc.)",
      "2. Initialize PostgreSQL connection (optional)",
      "3. Start LiveReload server on port 35730", 
      "4. Launch HTTP server on port 8080",
      "5. Launch HTTPS server on port 3001",
      "6. Initialize frontend logger and debug systems",
      "7. Auto-enable developer mode for localhost",
      "8. Begin file watching for auto-reload"
    ],
    "commands": {
      "start_dev": "./dev",
      "start_debug": "./dev-debug", 
      "run_tests": "npm test",
      "clean_processes": "npm run clean"
    }
  }
}
