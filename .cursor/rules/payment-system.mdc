# Payment System - Complete Implementation Rules

*Auto-generated from meta.mdc requirements registry*

## üéØ Core Requirements

### Credit Card Icon Implementation
**MANDATORY**: Credit card SVG (NOT generic user icon)
```html
<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
  <rect x="2" y="4" width="20" height="16" rx="2"/>
  <line x1="2" y1="10" x2="22" y2="10"/>
</svg>
```

### Account Status Display Logic
```javascript
// Shows "Add Card" when no payment setup
// Shows user name when payment configured
if (!hasPaymentSetup) {
  accountStatus.textContent = "Add Card";
  accountStatus.style.cursor = "pointer";
} else {
  accountStatus.textContent = userName || "Account";
  accountStatus.style.cursor = "default";
}
```

### Critical Spacing Requirements (NEVER MODIFY)
```css
.account-link {
  position: absolute;
  right: 15px;
  gap: 8px; /* CRITICAL - ensures icon/text separation */
  min-width: 100px; /* CRITICAL for proper spacing */
}

.account-link svg {
  margin-right: 2px; /* MANDATORY additional icon spacing */
  width: 16px;
  height: 16px;
}

.text-input {
  margin-right: 160px; /* CRITICAL - prevents card icon overlap */
}

/* Mobile responsive spacing */
@media (max-width: 768px) {
  .text-input {
    margin-right: 80px; /* Reduced for mobile but prevents overlap */
  }
}
```

## üìù User Feedback Evolution History

### Issue Timeline & Resolutions:
1. **"icons not showing up"** ‚Üí Fixed: removed `hidden` class from account-status
2. **"Card icon separate from the text"** ‚Üí Fixed: increased gap to 8px  
3. **"Card still not separated to the right"** ‚Üí Fixed: margin-right 160px
4. **"Card icon overlapping w/ the text input (3rd time)"** ‚Üí PERSISTENT ISSUE
   - **Root Cause**: AI context amnesia forgetting previous fixes
   - **Solution**: Memory preservation system implemented
   - **Prevention**: This dedicated rule file + ui-memory.mdc

### Pattern Recognition:
- **Recurring Theme**: Icon positioning and spacing
- **User Priority**: Visual separation between icon and input
- **Technical Challenge**: CSS specificity and responsive behavior

## üé® UI Behavior Specifications

### Visual States
```css
/* Default state */
.account-link {
  color: #00d4ff;
  background: transparent;
  border: 1px solid transparent;
}

/* Setup needed state */
.account-link[style*="cursor: pointer"] {
  color: #ffa500;
  border-color: rgba(255, 165, 0, 0.2);
  background: rgba(255, 165, 0, 0.05);
}

/* Hover states (ui.mdc compliant) */
.account-link:hover {
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.12);
}

.account-link[style*="cursor: pointer"]:hover {
  background: rgba(255, 255, 255, 0.08);
  border-color: rgba(255, 255, 255, 0.12);
  color: #ffa500;
}
```

### Interactive Behavior
- **Click Handler**: Opens payment popdown when cursor is pointer
- **Account Display**: Dynamic text based on payment status
- **Responsive**: Maintains spacing on mobile (80px vs 160px)

## üîß Integration Points

### Payment Manager Integration
```javascript
// Initialization check
this.hasPaymentSetup = await paymentManager.checkInitialPaymentSetup();

// Developer mode bypass
if (!molPaymentEnabled) {
  this.hasPaymentSetup = true;
}

// Dynamic account status update
paymentManager.updateAccountStatus();
```

### Developer Mode Interaction
- **No UI elements** for developer mode (terminal controlled)
- **Auto-enable** on localhost when no device token
- **Console function**: `enableDevMode()` available globally

## üö´ Prevention Rules - NEVER DO THIS

### ‚ùå Forbidden Modifications:
1. **Never reduce** `.account-link gap` below 8px
2. **Never remove** `.account-link svg margin-right: 2px`
3. **Never reduce** `.text-input margin-right` below 160px (desktop)
4. **Never add** developer mode UI elements
5. **Never use** generic user icon instead of credit card SVG

### ‚ùå Common Anti-Patterns:
- Forgetting mobile responsive spacing
- Using `position: relative` instead of `absolute` for account-link
- Adding box-shadow on hover (violates ui.mdc)
- Hardcoding user names instead of dynamic display

## üîÑ Maintenance Protocol

### When Modifying Payment System:
1. **Read this file first** - before any changes
2. **Test spacing** on both desktop and mobile
3. **Verify icon separation** - must be visually distinct from text
4. **Update this file** if adding new requirements
5. **Cross-reference** ui-memory.mdc for conflicts

### When User Reports Issues:
1. **Add to User Feedback History** section above
2. **Document solution** with exact code
3. **Update Prevention Rules** if new anti-pattern discovered
4. **Update meta.mdc** requirements registry

---

**This file is auto-maintained by the requirements generation system and updated with every payment-related change.**
