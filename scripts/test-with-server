#!/bin/bash

# Test with Server Procedure
# Starts server, runs all tests, then stops server

set -e

echo "🚀 Starting Test with Server Procedure..."
echo "========================================="

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_step() { echo -e "${BLUE}🔄 $1${NC}"; }
log_success() { echo -e "${GREEN}✅ $1${NC}"; }
log_info() { echo -e "${YELLOW}ℹ️  $1${NC}"; }

# Clean up any existing processes
log_step "Cleaning up existing processes..."
pkill -f "node.*server.js" 2>/dev/null || true
pkill -f "nodemon" 2>/dev/null || true
lsof -ti:35730 | xargs kill -9 2>/dev/null || true
lsof -ti:35729 | xargs kill -9 2>/dev/null || true
lsof -ti:8080 | xargs kill -9 2>/dev/null || true
sleep 2

# Start the development server in background
log_step "Starting development server..."
./dev > server.log 2>&1 &
DEV_PID=$!

# Wait for server to start
log_step "Waiting for server to initialize..."
sleep 5

# Check if server is running
if kill -0 $DEV_PID 2>/dev/null; then
    log_success "Server started successfully (PID: $DEV_PID)"
else
    echo "❌ Server failed to start"
    cat server.log
    exit 1
fi

# Run the full test suite
log_step "Running full test suite..."
if npm test; then
    log_success "All tests completed!"
else
    echo "❌ Some tests failed"
    TEST_EXIT_CODE=$?
fi

# Cleanup: Stop the server
log_step "Stopping development server..."
kill $DEV_PID 2>/dev/null || true
pkill -f "node.*server.js" 2>/dev/null || true
rm -f server.log

log_success "Test procedure completed"

# Exit with test result
exit ${TEST_EXIT_CODE:-0} 